{"version":3,"sources":["../src/gtmMultipleDataCollection.js"],"names":["$","window","on","a","includes"],"mappings":";;AAAA;;AACA;;;;;AAKAA,EAAEC,MAAF,EAAUC,EAAV,CAAa,MAAb,EAAqB,YAAM;;AAEvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA,QAAIC,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAR;AACAA,MAAEC,QAAF,CAAW,CAAX,EA9DuB,CA8DR;AACfD,MAAEC,QAAF,CAAW,CAAX,EA/DuB,CA+DR;AAElB,CAjED","file":"gtmMultipleDataCollection.js","sourcesContent":["import \"babel-polyfill\";\n/**\n * ------------  THE NATIONAL ARCHIVES  -----------------\n * JS - getting multiple data groups in Discovery Details page for Google Tag Manager\n * Developer: Punal Chotrani\n **/\n$(window).on('load', () => {\n\n    /*let $discovery = 'Discovery';\n\n    let tagContent = [\n        {\n            name: 'ContentGroup',\n            selector: 'meta[name=WT\\\\.cg_n]',\n        },\n        {\n            name: 'DocRef',\n            selector: 'meta[name=DCSext\\\\.docref]'\n        },\n        {\n            name: 'CollType',\n            selector: 'meta[name=DCSext\\\\.colltype]'\n        },\n        {\n            name: 'FilterType',\n            selector: 'meta[name=DCSext\\\\.filtertype]'\n        },\n        {\n            name: 'SearchType',\n            selector: 'meta[name=DCSext\\\\.searchtype]'\n        },\n        {\n            name: 'Dsource',\n            selector: 'meta[name=DCSext\\\\.dsource]'\n        },\n        {\n            name: 'Place',\n            selector: 'meta[name=DCSext\\\\.place]'\n        },\n        {\n            name: 'Rdata',\n            selector: 'meta[name=DCSext\\\\.rdata]'\n        },\n        {\n            name: 'Repository',\n            selector: 'meta[name=DCSext\\\\.repository]'\n        }\n    ];\n\n    let dummyArray = [];\n\n    tagContent.forEach((i) => {\n        let $el = $(i.selector);\n        let content = $el.attr('content');\n\n        if(content !== undefined) {\n            let returnObj = {\n                [i.name]: content\n            };\n            dummyArray.push(returnObj);\n        }\n    });\n\n    console.log(dummyArray);*/\n\n\n\n    var a = [1, 2, 3];\n    a.includes(2); // true\n    a.includes(4); // false\n\n});"]}